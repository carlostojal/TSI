** Módulo 10 **

* Herança *
No mundo real, as pessoas herdam características dos seus pais.
Em POO, herança é uma tentativa de implementar isto em código.

* Superclasse e subclasses *
Podemos ter por exemplo uma superclasse Carro, e podem depois ser criadas outras subclasses 
que herdam as características da superclasse, como por exemplo Jipe ou Citadino.

* Extends *
É uma palavra reservada do Java que indica que a classe herda a superclasse indicada a seguir.
Por exemplo:
public class Citadino extends Carro
A classe Citadino é uma subclasse que herda a superclasse Carro.

* Invocar método da superclasse *
Qualquer subclasse pode invocar um método da superclasse.

* Sobreescrita (override) *
A sobreescrita de métodos permite a alteração de um método da superclasse dentro da subclasse.
Se pretendermos acrescentar funcionalidades ao método sem anular as já existentes, utilizamos a palavra reservada super.

* Polimorfismo *
É a capacidade de um método de responder de várias formas, dependendo da classe que for instanciada se foi sobreescrito ou não.
Se não foi sobreescrita, vai responder da forma descrita na superclasse.
Para invocar o método de uma subclasse a partir da superclasse recorre-se a um cast.
Exemplo:
((Citadino)carro).ligarACManual()

* Classe Object *
O pacote java.lang contém a classe Object.
Todas as classes Java são subclasses da classe Object, ou seja, a classe Object é superclasse de todas as classes.

* Resumo *
A herança viabiliza a reutilização do código existente. As subclasses herdam todos os atributos das superclasses mas estas também podem ter atributos próprios.
A sobreescrita consiste em implementar um método com a mesma assinatura de duas classes diferentes.
A sobrecarga consiste em implementar um método com assinaturas diferentes na mesma classe.
O polimorfismo consiste na capacidade de um método se comportar de várias formas.
